[misc]
# Don't ask for confirmations
#assume_yes = true

# Disable specific steps - same options as the command line flag
# `a_m`, `android_studio`, `app_man`, `aqua`, `asdf`, `atom`, `audit`, `auto_cpufreq`, `bin`, `bob`, `brew_cask`, `brew_formula`, `bun`, `bun_packages`, `cargo`, `certbot`, `chezmoi`, `chocolatey`, `choosenim`, `cinnamon_spices`, `clam_av_db`, `composer`, `conda`, `config_update`, `containers`, `custom_commands`, `deb_get`, `deno`, `distrobox`, `dkp_pacman`, `dotnet`, `elan`, `emacs`, `firmware`, `flatpak`, `flutter`, `fossil`, `gcloud`, `gem`, `ghcup`, `git_repos`, `github_cli_extensions`, `gnome_shell_extensions`, `go`, `guix`, `haxelib`, `helix`, `helm`, `home_manager`, `jetbrains_aqua`, `jetbrains_clion`, `jetbrains_datagrip`, `jetbrains_dataspell`, `jetbrains_gateway`, `jetbrains_goland`, `jetbrains_idea`, `jetbrains_mps`, `jetbrains_phpstorm`, `jetbrains_pycharm`, `jetbrains_rider`, `jetbrains_rubymine`, `jetbrains_rustrover`, `jetbrains_toolbox`, `jetbrains_webstorm`, `jetpack`, `julia`, `juliaup`, `kakoune`, `krew`, `lensfun`, `lure`, `macports`, `mamba`, `mas`, `maza`, `micro`, `microsoft_store`, `miktex`, `mise`, `myrepos`, `nix`, `node`, `opam`, `pacdef`, `pacstall`, `pearl`, `pip3`, `pip_review`, `pip_review_local`, `pipupgrade`, `pipx`, `pipxu`, `pixi`, `pkg`, `pkgin`, `platformio_core`, `pnpm`, `poetry`, `powershell`, `protonup`, `pyenv`, `raco`, `rcm`, `remotes`, `restarts`, `rtcl`, `ruby_gems`, `rustup`, `rye`, `scoop`, `sdkman`, `self_update`, `sheldon`, `shell`, `snap`, `sparkle`, `spicetify`, `stack`, `stew`, `system`, `tldr`, `tlmgr`, `tmux`, `toolbx`, `uv`, `vagrant`, `vcpkg`, `vim`, `volta_packages`, `vscode`, `vscodium`, `waydroid`, `winget`, `wsl`, `wsl_update`, `xcodes`, `yadm`, `yarn`, `yazi`, `zigup`, `zvm`
disable = ["nix"]

# Ignore failures for these steps
#ignore_failures = ["powershell"]

# Run specific steps - same options as the command line flag
#only = ["system", "emacs"]

# Do not ask to retry failed steps (default: false)
#no_retry = true

# Run `sudo -v` to cache credentials at the start of the run; this avoids a
# blocking password prompt in the middle of a possibly-unattended run.
#pre_sudo = false

# Run inside tmux
#run_in_tmux = true

# List of remote machines with Topgrade installed on them
#remote_topgrades = ["toothless", "pi", "parnas"]

# Arguments to pass SSH when upgrading remote systems
#ssh_arguments = "-o ConnectTimeout=2"

# Path to Topgrade executable on remote machines
#remote_topgrade_path = ".cargo/bin/topgrade"

# Arguments to pass tmux when pulling Repositories
#tmux_arguments = "-S /var/tmux.sock"

# Do not set the terminal title
#set_title = false

# Display the time in step titles
# display_time = true

# Cleanup temporary or old files
#cleanup = true

# Skip sending a notification at the end of a run
#skip_notify = true

[git]
#max_concurrency = 5
# Additional git repositories to pull
#repos = [
#    "~/src/*/",
#    "~/.config/something"
#]

# Don't pull the predefined git repos
#pull_predefined = false

# Arguments to pass Git when pulling Repositories
#arguments = "--rebase --autostash"

[composer]
#self_update = true

# Commands to run before anything
[pre_commands]
#"Emacs Snapshot" = "rm -rf ~/.emacs.d/elpa.bak && cp -rl ~/.emacs.d/elpa ~/.emacs.d/elpa.bak"

# Custom commands
[commands]
#"Python Environment" = "~/dev/.env/bin/pip install -i https://pypi.python.org/simple -U --upgrade-strategy eager jupyter"

[brew]
#greedy_cask = true
#autoremove = true

[linux]
# Arch Package Manager to use. Allowed values: autodetect, trizen, aura, paru, yay, pikaur, pacman, pamac.
#arch_package_manager = "pacman"
# Arguments to pass yay (or paru) when updating packages
#yay_arguments = "--nodevel"
#aura_aur_arguments = "-kx"
#aura_pacman_arguments = ""
#show_arch_news = true
#trizen_arguments = "--devel"
#pikaur_arguments = ""
#pamac_arguments = "--no-devel"
#enable_tlmgr = true
#emerge_sync_flags = "-q"
#emerge_update_flags = "-uDNa --with-bdeps=y world"
#redhat_distro_sync = false
#rpm_ostree = false

[windows]
# Manually select Windows updates
#accept_all_updates = false
#open_remotes_in_new_terminal = true

# Causes Topgrade to rename itself during the run to allow package managers
# to upgrade it. Use this only if you installed Topgrade by using a package
# manager such as Scoop or Cargo
#self_rename = true

[npm]
# Use sudo if the NPM directory isn't owned by the current user
#use_sudo = true

[firmware]
# Offer to update firmware; if false just check for and display available updates
#upgrade = true

[flatpak]
# Use sudo for updating the system-wide installation
#use_sudo = true

[distrobox]
#use_root = false
#containers = ["archlinux-latest"]
